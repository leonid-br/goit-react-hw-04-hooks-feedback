{"version":3,"sources":["components/BtnList/BtnList.module.css","components/Section/Section.module.css","components/StatListItem/StatListItem.module.css","components/Notification/Notification.module.css","components/Section/Section.js","components/BtnList/BtnList.js","components/StatListItem/StatListItem.js","components/StatisticsList/StatisticsList.js","components/Notification/Notification.js","components/App.js","index.js"],"names":["module","exports","Section","title","children","className","section","BtnList","keysArr","clickOnBtn","btnList","map","key","type","onClick","btn","toString","StatListItem","label","value","StatisticsList","good","bad","neutral","totalReviews","positive","Notification","message","notification","App","state","evt","btnName","target","innerText","setState","countTotalFeedback","Object","values","reduce","acc","val","countPositiveFeedbackPercentage","Math","round","keys","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gIACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,IAAM,uB,oBCA3DD,EAAOC,QAAU,CAAC,QAAU,2B,gBCA5BD,EAAOC,QAAU,CAAC,KAAO,2BAA2B,MAAQ,8B,gBCA5DD,EAAOC,QAAU,CAAC,aAAe,qC,4JCgBlBC,EAdC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,0BAASC,UAAWC,UAApB,UACE,6BAAKH,IACJC,M,OCkBQG,EAtBC,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,WAC1B,OACE,qBAAKJ,UAAWK,UAAhB,SACGF,EAAQG,KAAI,SAAAC,GAAG,OACd,wBAEEC,KAAK,SACLC,QAASL,EACTJ,UAAWU,MAJb,SAMGH,GALIA,EAAII,kB,OCUJC,EAfM,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MAC3B,OACI,qBAAId,UAAWF,QAAf,UACKe,EADL,IACaC,MCwDNC,EArDQ,SAAC,GAMjB,IALHC,EAKE,EALFA,KACAC,EAIE,EAJFA,IACAC,EAGE,EAHFA,QACAC,EAEE,EAFFA,aACAC,EACE,EADFA,SAEA,OACI,8BACI,+BACI,cAAC,EAAD,CAAcP,MAAO,OAAQC,MAAOE,IACpC,cAAC,EAAD,CAAcH,MAAO,MAAOC,MAAOG,IACnC,cAAC,EAAD,CACIJ,MAAO,UACPC,MAAOI,IAGX,cAAC,EAAD,CACIL,MAAO,QACPC,MAAOK,IAGX,cAAC,EAAD,CACIN,MAAO,uBACPC,MAAK,UAAKM,EAAL,a,QCtBVC,EARM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,mBAAGtB,UAAWuB,eAAd,SAA6BD,KCgEvBE,E,4MA5DXC,MAAQ,CACJT,KAAM,EACNE,QAAS,EACTD,IAAK,G,EAITb,WAAa,SAAAsB,GACT,IAAMC,EAAUD,EAAIE,OAAOC,UAC3B,EAAKC,SAAL,eAAiBH,EAAU,EAAKF,MAAME,GAAW,K,EAIrDI,mBAAqB,WAEjB,OADoBC,OAAOC,OAAO,EAAKR,OACpBS,QAAO,SAACC,EAAKC,GAAN,OAAcD,EAAMC,IAAK,I,EAIvDC,gCAAkC,WAC9B,OAAOC,KAAKC,MACW,IAAlB,EAAKd,MAAMT,KAAc,EAAKe,uB,4CAIvC,WACI,IAAM5B,EAAU6B,OAAOQ,KAAKC,KAAKhB,OACjC,EAA+BgB,KAAKhB,MAA5BR,EAAR,EAAQA,IAAKD,EAAb,EAAaA,KAAME,EAAnB,EAAmBA,QACnB,OACI,gCACI,cAAC,EAAD,CAASpB,MAAM,wBAAf,SAEI,cAAC,EAAD,CACIK,QAASA,EACTC,WAAYqC,KAAKrC,eAKzB,cAAC,EAAD,CAASN,MAAO,aAAhB,SACK2C,KAAKV,qBAAuB,EACzB,cAAC,EAAD,CACIf,KAAMA,EACNE,QAASA,EACTD,IAAKA,EAGLE,aAAcsB,KAAKV,qBACnBX,SAAUqB,KAAKJ,oCAGnB,cAAC,EAAD,CACIf,QAAS,+B,GArDnBoB,aCFlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.b63e8101.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"btnList\":\"BtnList_btnList__jEhij\",\"btn\":\"BtnList_btn__3yWgV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__ook7a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"StatListItem_item__3JtoH\",\"title\":\"StatListItem_title__GgeWK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__qOSYu\"};","import PropTypes from 'prop-types';\r\nimport { section } from './Section.module.css';\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <section className={section}>\r\n      <h2>{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  // children: PropTypes.string,\r\n};\r\n\r\nexport default Section;\r\n","import PropTypes from 'prop-types';\r\nimport { btnList, btn } from './BtnList.module.css';\r\n\r\nconst BtnList = ({ keysArr, clickOnBtn }) => {\r\n  return (\r\n    <div className={btnList}>\r\n      {keysArr.map(key => (\r\n        <button\r\n          key={key.toString()}\r\n          type=\"button\"\r\n          onClick={clickOnBtn}\r\n          className={btn}\r\n        >\r\n          {key}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nBtnList.propTypes = {\r\n  keysArr: PropTypes.array.isRequired,\r\n  clickOnBtn: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default BtnList;\r\n","import { title } from './StatListItem.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst StatListItem = ({ label, value }) => {\r\n    return (\r\n        <li className={title}>\r\n            {label}:{value}\r\n        </li>\r\n    );\r\n};\r\n\r\nStatListItem.propTypes = {\r\n    label: PropTypes.string.isRequired,\r\n    value: PropTypes.oneOfType([\r\n        PropTypes.number,\r\n        PropTypes.string,\r\n    ]),\r\n};\r\nexport default StatListItem;\r\n","import PropTypes from 'prop-types';\r\nimport StatListItem from '../StatListItem';\r\n// import {\r\n//     item,\r\n//     title,\r\n//     goodStat,\r\n//     badStat,\r\n// } from './StatisticsList.module.css';\r\n\r\nconst StatisticsList = ({\r\n    good,\r\n    bad,\r\n    neutral,\r\n    totalReviews,\r\n    positive,\r\n}) => {\r\n    return (\r\n        <div>\r\n            <ul>\r\n                <StatListItem label={'Good'} value={good} />\r\n                <StatListItem label={'Bad'} value={bad} />\r\n                <StatListItem\r\n                    label={'Neutral'}\r\n                    value={neutral}\r\n                />\r\n\r\n                <StatListItem\r\n                    label={'Total'}\r\n                    value={totalReviews}\r\n                />\r\n\r\n                <StatListItem\r\n                    label={' Positive percentage'}\r\n                    value={`${positive}%`}\r\n                />\r\n                {/* \r\n                <li className={item}>\r\n                    <span className={title}>\r\n                        Positive percentage:\r\n                    </span>\r\n                    {positive > 50 ? (\r\n                        <span className={goodStat}>\r\n                            {positive}%\r\n                        </span>\r\n                    ) : (\r\n                        <span className={badStat}>\r\n                            {positive}%\r\n                        </span>\r\n                    )}\r\n                </li> */}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nStatisticsList.propTypes = {\r\n    statTarget: PropTypes.object.isRequired,\r\n    keysArr: PropTypes.array.isRequired,\r\n    totalReviews: PropTypes.number.isRequired,\r\n    positive: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default StatisticsList;\r\n","import PropTypes from 'prop-types';\r\nimport { notification } from './Notification.module.css';\r\n\r\nconst Notification = ({ message }) => {\r\n  return <p className={notification}>{message}</p>;\r\n};\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;\r\n","import { Component } from 'react';\n\nimport Section from './Section';\nimport BtnList from './BtnList';\nimport StatisticsList from './StatisticsList';\nimport Notification from './Notification';\n\nclass App extends Component {\n    state = {\n        good: 0,\n        neutral: 0,\n        bad: 0,\n    };\n\n    //============ метод подсчета отзывов\n    clickOnBtn = evt => {\n        const btnName = evt.target.innerText;\n        this.setState({ [btnName]: this.state[btnName] + 1 });\n    };\n\n    //============ метод подсчета суммы отзывов\n    countTotalFeedback = () => {\n        const totatlCount = Object.values(this.state);\n        return totatlCount.reduce((acc, val) => acc + val, 0);\n    };\n\n    //============ метод подсчета положительных отзывов\n    countPositiveFeedbackPercentage = () => {\n        return Math.round(\n            (this.state.good * 100) / this.countTotalFeedback(),\n        );\n    };\n\n    render() {\n        const keysArr = Object.keys(this.state);\n        const { bad, good, neutral } = this.state;\n        return (\n            <div>\n                <Section title=\"Please leave feedback\">\n                    {/* Рендер кнопок */}\n                    <BtnList\n                        keysArr={keysArr}\n                        clickOnBtn={this.clickOnBtn}\n                    />\n                </Section>\n\n                {/* Рендер списка */}\n                <Section title={'Statistics'}>\n                    {this.countTotalFeedback() > 0 ? (\n                        <StatisticsList\n                            good={good}\n                            neutral={neutral}\n                            bad={bad}\n                            // keysArr={keysArr}\n                            // statTarget={this.state}\n                            totalReviews={this.countTotalFeedback()}\n                            positive={this.countPositiveFeedbackPercentage()}\n                        />\n                    ) : (\n                        <Notification\n                            message={'No feedback given'}\n                        />\n                    )}\n                </Section>\n            </div>\n        );\n    }\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}